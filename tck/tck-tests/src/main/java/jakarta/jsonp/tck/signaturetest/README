The latest signature files are updated in the jsonp-api repoitory 
(tck/tck-tests/src/main/java/jakarta/jsonp/tck/signaturetest) 
generated using sigtest-maven-plugin.jar(version 1.4).

The signature tests are run using the sigtest-maven-plugin.jar and the framework avaliable in this folder.



For TCK developers  :-

  1. Generate Signature Files : The signature file will be generated by the TCK team using jsonp/tck/pom.xml 
  where the below commented code can be used. The classpath should contain the api jar for which we are generating the signature file.

      <!--plugin>
          <groupId>org.netbeans.tools</groupId>
          <artifactId>sigtest-maven-plugin</artifactId>
                      <version>1.4</version>
                      <executions>
                          <execution>
                              <goals>
                                  <goal>generate</goal>
                              </goals>
                          </execution>
                      </executions>
                      <configuration>
                          <FileName>${project.build.directory}/jakarta.json.sig_${version}</FileName>
                    <packages>jakarta.json, jakarta.json.spi, jakarta.json.stream</packages>
                      </configuration>
      </plugin-->

      The signature file name expected is jakarta.json.sig_${version} , where version is the api version for which the signature is generated.

  2. Place the required files in the TCK folder :

    All the below files has to be placed in the folder tck/tck-tests/src/main/java/jakarta/jsonp/tck/signaturetest, so they are included as part of the TCK jar during the build.

    -The signature file generated from above of the name jakarta.json.sig_${version}
    -The mapping file will be named sig-test.map, it contains the api to version mapping. This file will be used to pick the right signature file when running the signature test.
    -The package list file will be named sig-test-pkg-list.txt, contains the list of packages tested.



For TCK users (to run the signature test as a Junit test) :-

  1. The signature test related files will need to be extracted from the jar to a known location to be used for running the test.
For eg: in maven we can use the below code to extract the signature file, mapping file and package list file to ${project.build.directory}/signaturedirectory.

  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-dependency-plugin</artifactId>
    <version>3.2.0</version>
    <executions>
        <execution>
            <id>copy-jsonp-tck-signature-files</id>
            <phase>generate-test-sources</phase>
            <goals>
                <goal>unpack</goal>
            </goals>
            <configuration>
            <artifactItems>
                <artifactItem>
                    <groupId>jakarta.json</groupId>
                    <artifactId>jakarta.json-tck-tests</artifactId>
                    <version>${jsonp-tck.version}</version>
                    <type>jar</type>
                    <overWrite>true</overWrite>
                </artifactItem>
          </artifactItems>
          <!-- We need the signature file, mapping file and package list file -->
          <includes>**/*sig-test*,**/*jakarta.json.sig_*,**/*sig-test-pkg-list.txt</includes>
          <outputDirectory>${project.build.directory}/signaturedirectory</outputDirectory>
          </configuration>
        </execution>
    </executions>
  </plugin> 
  2. Set the below system properties correctly :

    jimage.dir //The jdk9+(jdk11 for this release) will be extracted to this location as to use the Java modules in the path.
    optional.tech.packages.to.ignore // The optional package that should be ignored while running the signature test
    signature.mapfile //The full path of the signature mapping file
    signature.repositoryDir // The directory where the signature file is placed.
    signature.packagelist //The full path of the list of packages that will be tested.
    signature.sigTestClasspath // the sigTestClasspath that will contain the implementation jar that needs to be tested along with dependent jars.

    For eg:

    <jimage.dir>${project.build.directory}/jdk11-bundle</jimage.dir>
    <optional.tech.packages.to.ignore>jakarta.xml.bind</optional.tech.packages.to.ignore>
    <signature.mapfile>${project.build.directory}/signaturedirectory/jakarta/jsonp/tck/signaturetest/sig-test.map</signature.mapfile>
    <signature.repositoryDir>${project.build.directory}/signaturedirectory/jakarta/jsonp/tck/signaturetest</signature.repositoryDir>
    <signature.packagelist>${project.build.directory}/signaturedirectory/jakarta/jsonp/tck/signaturetest/sig-test-pkg-list.txt</signature.packagelist>
    <signature.sigTestClasspath>${project.build.directory}/signaturedirectory/jakarta.json-api.jar:${project.build.directory}/jdk11-bundle/java.base:${project.build.directory}/jdk11-bundle/java.rmi:${project.build.directory}/jdk11-bundle/java.sql:${project.build.directory}/jdk11-bundle/java.naming</signature.sigTestClasspath>

  3. The signature test alone can be run using below command within jersey-tck/ directory.

  mvn clean verify -Dit.test=jakarta.jsonp.tck.signaturetest.**
